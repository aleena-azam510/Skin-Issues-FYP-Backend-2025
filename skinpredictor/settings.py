"""
Django settings for skinpredictor project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url # Add this import

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-f(me9chu@b@6^&_93paq+msm8=ar%chn1nia5*b=9!^2uz$cik'
SECRET_KEY = os.environ.get('SECRET_KEY', '9+2p8yilt0d!_d(4v@68+!#+evwy0f&r4^itcf*&f9tn*j=y@h')


# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
DEBUG = os.environ.get('DJANGO_DEBUG', 'True') == 'True' # Default to True for local, False for Render


# ALLOWED_HOSTS = []
ALLOWED_HOSTS = os.environ.get('DJANGO_ALLOWED_HOSTS', '').split(',')
if DEBUG:
    ALLOWED_HOSTS = ['*'] # Allow all for local dev if DEBUG is True


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework', # Add this if not already there and using DRF
    'predictor',
    'users',
    'reviews',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware', # Add for serving static files in production
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',  # Corrected: Comma is correct here
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

# URL to redirect to for login. This should point to your authentication page.
LOGIN_URL = 'auth_page' # Or whatever URL you've configured for your login page

# URL to redirect to after a user successfully logs in.
# '/' will redirect them to the site's homepage (handled by users.urls).
LOGIN_REDIRECT_URL = '/'

# Optional: If you have a URL for logging out and want to redirect somewhere after logout
# LOGOUT_REDIRECT_URL = '/' # Defaults to LOGIN_URL if not set, often good to redirect to home.


# CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_ALL_ORIGINS = True # For initial deployment and if frontend is truly dynamic


ROOT_URLCONF = 'skinpredictor.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
             #  Add the path to your templates directory here
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'skinpredictor.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'skindb',           # Your database name
#         'USER': 'alina',           # Your database user
#         'PASSWORD': 'MyDjangoPass!123',   # The password for 'alina' user
#         'HOST': 'localhost',              # PostgreSQL server host (local machine)
#         'PORT': '5432',                   # Default PostgreSQL port is 5432.
#     }
# }

# Database configuration for Render
DATABASES = {
    'default': dj_database_url.config(
        default=os.environ.get('DATABASE_URL', 'postgresql://alina:MyDjangoPass!123@localhost:5432/skindb'),
        conn_max_age=600 # Optional: Reconnect to DB after 10 mins if connection drops
    )
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Email settings for development (example using Gmail SMTP)
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True # Or False if using SSL/TLS differently
# EMAIL_HOST_USER = 'skinissuesfyp@gmail.com' # Your Gmail address
# EMAIL_HOST_PASSWORD = 'your_app_password' # Use an App Password if you have 2FA on Gmail
# DEFAULT_FROM_EMAIL = 'skinissuesfyp@gmail.com' # Or your_email@gmail.com
# CONTACT_EMAIL = 'skinissuesfyp@gmail.com' # The email where you want to receive messages

# For local development, you might prefer to print emails to console:
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# Define the CONTACT_EMAIL where you want to receive messages
CONTACT_EMAIL = 'your_recipient_email@example.com' # <--- ADD OR CORRECT THIS LINE


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Static files configuration
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'skinpredictor', 'static'),
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Correct for production

# Media files configuration
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # Only MEDIA_ROOT is needed

# Production security settings (if DEBUG is False)
if not DEBUG:
    X_FRAME_OPTIONS = 'DENY'
    SECURE_CONTENT_TYPE_NOSNIFF = True
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_SSL_REDIRECT = True # Redirects all HTTP to HTTPS
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    # Optional: Strict-Transport-Security header for HSTS
    # SECURE_HSTS_SECONDS = 31536000 # 1 year
    # SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    # SECURE_HSTS_PRELOAD = True
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


PKL_FILE_URL = os.environ.get('PKL_FILE_URL', '') # This will be set on Render
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'